{"version":3,"sources":["media/plus.png","media/less.png","components/Navigation Bar/AddColumns.js","components/Navigation Bar/AddRows.js","components/Navigation Bar/IslandInfo.js","components/Navigation Bar/About.js","components/Navigation Bar/nav-bar.js","media/sea8bit.gif","media/land.png","components/Play Area/Cell.js","components/Play Area/PlayArea.js","App.js","index.js"],"names":["AddColumns","props","className","type","src","removeBtn","onClick","decreaseColumns","value","columns","onInputCapture","setColumns","addBtn","increaseColumns","AddRows","decreaseRows","rows","setRows","increaseRows","IslandInfo","landCount","About","state","React","Component","NavBar","Cell","terrain","sea","toggleTerrain","bind","id","createRef","this","updateLandCount","setState","land","ref","PlayArea","cells","i","temp","j","push","content","length","map","item","App","islandCount","updateCells","prevState","parseInt","console","log","event","target","newCells","flat","filter","l","updwn","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.38e0f93b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/plus.1507724f.png\";","export default __webpack_public_path__ + \"static/media/less.ee0b39d9.png\";","import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\n\r\nimport addBtn from '../../media/plus.png';\r\nimport removeBtn from '../../media/less.png';\r\nimport '../../index.css';\r\n\r\nfunction AddColumns(props) {\r\n    return(\r\n        <li className=\"navItem\">\r\n            <p>Columns</p>\r\n            <div className=\"gridControls\">\r\n                <input type=\"image\" src={removeBtn} onClick={props.decreaseColumns} />\r\n                <input type=\"number\" value={props.columns} onInputCapture={props.setColumns} />\r\n                <input type=\"image\" src={addBtn} onClick={props.increaseColumns} />\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default AddColumns;","import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\n\r\nimport addBtn from '../../media/plus.png';\r\nimport removeBtn from '../../media/less.png';\r\nimport '../../index.css';\r\n\r\nfunction AddRows(props) {\r\n    return(\r\n        <li className=\"navItem\">\r\n            <p>Rows</p>\r\n            <div className=\"gridControls\">\r\n                <input type=\"image\" src={removeBtn} onClick={props.decreaseRows} />\r\n                <input type=\"number\" value={props.rows} onInputCapture={props.setRows} />\r\n                <input type=\"image\" src={addBtn} onClick={props.increaseRows} />\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default AddRows;","import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\n\r\nfunction IslandInfo(props){\r\n    return(\r\n        <li className=\"navItem\">\r\n            <p>Grid size: <br/>          \r\n              {props.rows} rows <br/>           \r\n              {props.columns} columns <br/> <br/>           \r\n              And a total of {props.rows*props.columns} cells from which {props.landCount} are filled</p>           \r\n        </li>\r\n    );\r\n}\r\n\r\nexport default IslandInfo;","import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\n\r\nclass About extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <li className=\"navItem\">\r\n                <p>This application was developed by Rodolfo Tamayo</p>               \r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default About;","import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\n\r\nimport AddColumns from \"./AddColumns\";\r\nimport AddRows from \"./AddRows\";\r\nimport IslandInfo from \"./IslandInfo\";\r\nimport About from \"./About\";\r\nimport '../../index.css';\r\n\r\nfunction NavBar(props) {\r\n    return(\r\n        <nav className=\"navBar\">\r\n            <div className=\"logo\">The island Challenge</div>\r\n            <ul className=\"navBar-nav\">\r\n                <AddColumns increaseColumns={props.increaseColumns} decreaseColumns={props.decreaseColumns} setColumns={props.setColumns} columns={props.columns} />\r\n                <AddRows increaseRows={props.increaseRows} decreaseRows={props.decreaseRows} setRows={props.setRows} rows={props.rows} />\r\n                <IslandInfo rows={props.rows} columns={props.columns} landCount={props.landCount}/>\r\n                <About />\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/sea8bit.24db9027.gif\";","export default __webpack_public_path__ + \"static/media/land.29d9d906.png\";","import React from 'react';\r\n\r\nimport sea from '../../media/sea8bit.gif'\r\nimport land from '../../media/land.png'\r\n\r\nclass Cell extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          terrain: sea\r\n        }\r\n        this.toggleTerrain = this.toggleTerrain.bind(this);\r\n\r\n        this[this.props.id] = React.createRef();\r\n\r\n      }\r\n\r\n      toggleTerrain(){\r\n        if (this.state.terrain == sea){\r\n            this.props.updateLandCount(true);\r\n            this.setState({ terrain: land });\r\n        }else if (this.state.terrain == land){\r\n            this.props.updateLandCount(false);\r\n            this.setState({ terrain: sea });\r\n        }\r\n      }\r\n\r\n      render(){\r\n          return(\r\n              <td>\r\n                <img ref={this[this.props.id]} src={this.state.terrain} onClick={this.toggleTerrain} />\r\n              </td>\r\n          );\r\n      }\r\n}\r\n\r\nexport default Cell;","import React from 'react';\r\nimport reactDom from \"react-dom\";\r\n\r\nimport Cell from './Cell';\r\nimport sea from '../../media/sea8bit.gif'\r\nimport land from '../../media/land.png'\r\n\r\n\r\nfunction PlayArea(props){\r\n\r\n    const cells = [];\r\n\r\n    for(let i=0; i<props.rows; i++){\r\n        const temp = [];\r\n        for(let j=0; j<props.columns; j++){\r\n            temp.push({id:`${i+1},${j+1}`, terrain: sea, content:<Cell id={`C${i+1}${j+1}`} updateLandCount={props.updateLandCount}/>});\r\n        }\r\n        cells.push(temp);\r\n    }\r\n\r\n    \r\n\r\n    /*const totalLands = 0;\r\n        \r\n        for(let i=0; i<props.rows; i++){\r\n            for(let j=0; j<props.columns; j++){\r\n                if(this[`C${i+1}${j+1}`].current.includes('land') === true){\r\n                    totalLands= totalLands + 1;\r\n                }\r\n            }\r\n        }*/\r\n        \r\n   \r\n    \r\n    //console.log(this.refs[C11].current);\r\n    /*\r\n    const newCells = cells.map(rows => (rows.map((item) => ({id: item.id, terrain: item.terrain}))) );\r\n    const newTotalLands = newCells.flat().filter(l => l.terrain == sea).length;\r\n    console.log(newTotalLands);\r\n\r\n    for (let i=0; i<newLands; i++){\r\n        props.updateLandCount(true);\r\n    }\r\n    //props.updateCells(newLands);     \r\n    */\r\n    \r\n    return(\r\n        <div className=\"playArea\">\r\n            <table className=\"playArea-grid\">\r\n                <tbody>\r\n                    {cells.length > 0 ? cells.map(rows => <tr> {rows.map(item => item.content)} </tr> ) : []}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\n/*\r\nclass PlayArea extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            virtualLands: 0\r\n        }\r\n        this.virtualLandUpdate = this.virtualLandUpdate.bind(this);\r\n    }\r\n\r\n    virtualLandUpdate(updwn){\r\n        console.log(this.state.virtualLands);\r\n        if (updwn === true){\r\n            this.setState((prevState) => ({\r\n              virtualLands: parseInt(prevState.virtualLands) + 1\r\n            }));\r\n          }else if (updwn === false){\r\n            this.setState((prevState) => ({\r\n                virtualLands: parseInt(prevState.virtualLands) - 1\r\n            }));\r\n          }\r\n        \r\n        this.props.updateLandCount(\"st\", this.virtualLands);\r\n    }\r\n    \r\n    render(){\r\n        const cells = [];\r\n\r\n        for(let i=0; i<this.props.rows; i++){\r\n            const temp = [];\r\n            for(let j=0; j<this.props.columns; j++){\r\n                temp.push({id:`${i+1},${j+1}`, terrain: sea, content:<Cell virtualLandUpdate={this.virtualLandUpdate} updateLandCount={this.props.updateLandCount}/>});\r\n            }\r\n            cells.push(temp);\r\n        }\r\n        return(\r\n            <div className=\"playArea\">\r\n                <table className=\"playArea-grid\">\r\n                    <tbody>\r\n                        {cells.length > 0 ? cells.map(rows => <tr> {rows.map(item => item.content)} </tr> ) : []}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n*/\r\n\r\n\r\n//item => item.content\r\n\r\n\r\nexport default PlayArea;","import React from 'react';\n\nimport './App.css';\nimport NavBar from './components/Navigation Bar/nav-bar';\nimport PlayArea from './components/Play Area/PlayArea';\nimport './index.css';\nimport sea from './media/sea8bit.gif'\nimport land from './media/land.png'\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      rows: 3,\n      columns: 3,\n      //cells: [[{id:\"1,1\", terrain: sea}, {id:\"1,2\", terrain: sea}, {id:\"1,3\", terrain: sea}],[{id:\"2,1\", terrain: sea}, {id:\"2,2\", terrain: sea}, {id:\"2,3\", terrain: sea}],[{id:\"3,1\", terrain: sea}, {id:\"3,2\", terrain: sea}, {id:\"3,3\", terrain: sea}]],\n      landCount: 0,\n      islandCount: 0\n    }\n    this.increaseRows = this.increaseRows.bind(this);\n    this.decreaseRows = this.decreaseRows.bind(this);\n    this.setRows = this.setRows.bind(this);\n    this.increaseColumns = this.increaseColumns.bind(this);\n    this.decreaseColumns = this.decreaseColumns.bind(this);\n    this.setColumns = this.setColumns.bind(this);\n    this.updateCells = this.updateCells.bind(this);\n    this.updateLandCount = this.updateLandCount.bind(this);\n  }\n\n  \n\n  //handler methods\n  increaseRows(){\n    if (this.state.rows < 10) {\n      this.setState((prevState) => ({\n        rows: parseInt(prevState.rows) + 1\n      }));\n    }\n  }\n\n  decreaseRows(){\n    if (this.state.rows>1){\n      //aquí regresar toda la última row a sea\n      this.setState((prevState) => ({ \n        rows: parseInt(prevState.rows) - 1          \n      }));\n      console.log(\"Aquí debo recontar las lands\");\n    }\n  }\n\n  setRows(event){\n    if (event.target.value>=1 && event.target.value<11){\n      this.setState({rows: event.target.value});\n    } else {\n      this.setState((prevState) => ({\n        rows: prevState.rows\n      }));\n    }\n  }\n\n  increaseColumns(){\n    if (this.state.columns < 10) {\n      this.setState((prevState) => ({\n          columns: parseInt(prevState.columns) + 1\n      }));\n    }\n  }\n\n  decreaseColumns(){\n    if (this.state.columns>1){\n      this.setState((prevState) => ({\n          columns: parseInt(prevState.columns) - 1\n      }));\n      console.log(\"Aquí debo recontar las lands\");\n    }\n  }\n\n  setColumns(event){\n    if (event.target.value>=1 && event.target.value<11){\n      this.setState({columns: event.target.value});\n    } else {\n      this.setState((prevState) => ({\n        columns: prevState.columns\n      }));\n    }\n  }\n\n  updateCells(newCells){\n    const newLands = newCells.flat().filter(l => l.terrain == land).length;\n    //this.setState({landCount: newLands});\n  }\n  \n  updateLandCount(updwn){\n    if (updwn === true){\n      this.setState((prevState) => ({\n        landCount: parseInt(prevState.landCount) + 1\n      }));\n    }else if (updwn === false){\n      this.setState((prevState) => ({\n        landCount: parseInt(prevState.landCount) - 1\n      }));\n    }\n  } \n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar increaseRows={this.increaseRows} decreaseRows={this.decreaseRows} setRows={this.setRows} increaseColumns={this.increaseColumns} decreaseColumns={this.decreaseColumns} setColumns={this.setColumns} rows={this.state.rows} columns={this.state.columns} landCount={this.state.landCount}/>\n        <PlayArea rows={this.state.rows} columns={this.state.columns} updateCells={this.updateCells} landCount={this.state.landCount} updateLandCount={this.updateLandCount} />\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root')\n);\n\n\n"],"sourceRoot":""}